name: Vendor API CI/CD with Keploy Testing

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Generate test coverage
      run: npm run test:coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Start the API server
      run: |
        npm start &
        sleep 10
        curl -f http://localhost:3001/ || exit 1
      env:
        NODE_ENV: test
        PORT: 3001

    - name: Install Keploy
      run: |
        curl --silent --location "https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz" | tar xz -C /tmp
        sudo mkdir -p /usr/local/bin && sudo mv /tmp/keploy /usr/local/bin

    - name: Generate API Tests with Keploy
      run: |
        # Generate tests using OpenAPI schema
        keploy gen --source-file openapi.yaml --output-dir ./keploy-tests
        
    - name: Run Keploy API Tests
      run: |
        # Run the generated API tests
        keploy test --source-file openapi.yaml --coverage
      env:
        KEPLOY_MODE: test
        API_BASE_URL: http://localhost:3001

    - name: Upload Keploy Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: keploy-test-results
        path: |
          ./keploy-tests
          ./test-results.xml
          ./coverage-report.json

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --only=production

    - name: Build application
      run: |
        echo "Building application for production..."
        # Add any build steps here if needed
        
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add deployment steps here
        # Example: Deploy to Heroku, AWS, etc.
        
    - name: Run smoke tests on staging
      run: |
        echo "Running smoke tests on staging..."
        # Add smoke test commands here
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi
